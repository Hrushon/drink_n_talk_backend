# Generated by Django 4.0 on 2023-02-10 17:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0004_alter_user_options_user_character_alter_user_about_and_more'),
        ('core', '0002_alter_language_abbreviation_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.IntegerField(choices=[(0, 'Безалкогольное'), (1, 'Слабоалкогольное'), (2, 'Крепкое')], verbose_name='степень алкогольности')),
                ('topic', models.CharField(blank=True, max_length=254, verbose_name='повестка')),
                ('quantity', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(10)], verbose_name='количество участников за столом')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('initiator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bars', to='users.user', verbose_name='инициатор')),
            ],
            options={
                'verbose_name': 'барная стойка',
                'verbose_name_plural': 'барные стойки',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='название темы')),
                ('tag', models.SlugField(verbose_name='сокращение (тег) для темы')),
            ],
            options={
                'verbose_name': 'напиток',
                'verbose_name_plural': 'напитки',
                'ordering': ('title',),
            },
        ),
        migrations.AlterModelOptions(
            name='drink',
            options={'ordering': ('title',), 'verbose_name': 'напиток', 'verbose_name_plural': 'напитки'},
        ),
        migrations.AlterModelOptions(
            name='language',
            options={'ordering': ('abbreviation',), 'verbose_name': 'язык', 'verbose_name_plural': 'языки'},
        ),
        migrations.AlterModelOptions(
            name='userdrink',
            options={'verbose_name': 'пользователь + напиток', 'verbose_name_plural': 'пользователи + напитки'},
        ),
        migrations.AlterModelOptions(
            name='userlanguage',
            options={'verbose_name': 'пользователь + язык', 'verbose_name_plural': 'пользователи + языки'},
        ),
        migrations.AddField(
            model_name='drink',
            name='users',
            field=models.ManyToManyField(through='core.UserDrink', to=settings.AUTH_USER_MODEL, verbose_name='пользователь(и)'),
        ),
        migrations.AlterField(
            model_name='drink',
            name='degree',
            field=models.IntegerField(choices=[(0, 'Безалкогольное'), (1, 'Слабоалкогольное'), (2, 'Крепкое')], verbose_name='степень алкогольности'),
        ),
        migrations.AlterField(
            model_name='drink',
            name='title',
            field=models.CharField(max_length=20, verbose_name='название'),
        ),
        migrations.AlterField(
            model_name='language',
            name='abbreviation',
            field=models.SlugField(max_length=7, verbose_name='аббревиатура'),
        ),
        migrations.AlterField(
            model_name='language',
            name='name',
            field=models.CharField(max_length=20, unique=True, verbose_name='название'),
        ),
        migrations.AlterField(
            model_name='language',
            name='users',
            field=models.ManyToManyField(through='core.UserLanguage', to=settings.AUTH_USER_MODEL, verbose_name='пользователь(и)'),
        ),
        migrations.AlterField(
            model_name='userdrink',
            name='drink',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.drink', verbose_name='напиток'),
        ),
        migrations.AlterField(
            model_name='userdrink',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drinks', to='users.user', verbose_name='пользователь'),
        ),
        migrations.AlterField(
            model_name='userlanguage',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.language', verbose_name='язык'),
        ),
        migrations.AlterField(
            model_name='userlanguage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='users.user', verbose_name='пользователь'),
        ),
        migrations.CreateModel(
            name='UserTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.theme', verbose_name='тема')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='themes', to='users.user', verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'пользователь + тема',
                'verbose_name_plural': 'пользователи + темы',
            },
        ),
        migrations.AddField(
            model_name='theme',
            name='users',
            field=models.ManyToManyField(through='core.UserTheme', to=settings.AUTH_USER_MODEL, verbose_name='пользователь(и)'),
        ),
        migrations.CreateModel(
            name='BarParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_join', models.DateTimeField(auto_now_add=True, verbose_name='дата присоединения')),
                ('bar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bar', verbose_name='бар')),
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.user', verbose_name='участник')),
            ],
            options={
                'verbose_name': 'бар + участник',
                'verbose_name_plural': 'бары + участники',
            },
        ),
        migrations.AddField(
            model_name='bar',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.language', verbose_name='язык'),
        ),
        migrations.AddField(
            model_name='bar',
            name='participants',
            field=models.ManyToManyField(through='core.BarParticipant', to=settings.AUTH_USER_MODEL, verbose_name='участники'),
        ),
        migrations.AddField(
            model_name='bar',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bars', to='core.theme', verbose_name='тема разговора'),
        ),
        migrations.AddConstraint(
            model_name='usertheme',
            constraint=models.UniqueConstraint(fields=('user', 'theme'), name='unique_user_theme'),
        ),
        migrations.AddConstraint(
            model_name='barparticipant',
            constraint=models.UniqueConstraint(fields=('bar', 'participant'), name='unique_bar_participant'),
        ),
    ]
